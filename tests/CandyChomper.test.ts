import { expect } from 'chai';
import { canChomp, adjacentMatches, chomp, swap, swapCandies } from '../src/utils/CandyChomper';
import { randomGrid } from '../src/utils/ColorFill';

describe('CandyChomper', () => {
  var grid: Array<Array<string>>;
  beforeEach(() => {
    grid = [
      ['💛', '⬛️', '💛', '💛', '💙', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '💙', '🔶', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
    ];
  });

  it('should return []', () => {
    const result = adjacentMatches(grid, { x: 0, y: 0 });
    expect(result).to.deep.equal([]);
  });

  it('should return items', () => {
    const result = adjacentMatches(grid, { x: 1, y: 0 });
    expect(result).deep.equal([
      { x: 2, y: 0 },
      { x: 3, y: 0 },
      { x: 4, y: 0 },
      { x: 5, y: 0 },
      { x: 6, y: 0 },
      { x: 7, y: 0 },
      { x: 8, y: 0 },
      { x: 9, y: 0 },
      { x: 1, y: 1 },
    ]);
  });

  it('should return a new grid', () => {
    const result = chomp(grid, { x: 1, y: 0 });
    expect(result).to.deep.equal([
      ['💛', '⬛️', '💛', '💛', '💙', '💙', '💙', '💙', '💙', '💙'],
      ['💣', '💣', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['💣', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['💣', '⬛️', '💛', '💛', '💙', '🔶', '💙', '💙', '💙', '💙'],
      ['💣', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['💣', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['💣', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['💣', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['💣', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['💣', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
    ]);
  });

  it('should swap two candies', () => {
    const result = swap(grid, { x: 1, y: 0 }, { x: 0, y: 0 });
    expect(result).to.deep.equal([
      ['⬛️', '⬛️', '💛', '💛', '💙', '💙', '💙', '💙', '💙', '💙'],
      ['💛', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '💙', '🔶', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
    ]);
  });

  it('should swap with the best option or not at all', () => {
    const result = swapCandies(grid, { x: 3, y: 4 });
    expect(result).to.deep.equal([
      ['💛', '⬛️', '💛', '💛', '💙', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
    ]);
  });

  it('should swap with the best option or not at all', () => {
    const result = swapCandies(grid, { x: 0, y: 1 });
    expect(result).to.deep.equal([
      ['⬛️', '💛', '💛', '💛', '💙', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '💙', '🔶', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
      ['⬛️', '⬛️', '💛', '💛', '🔶', '💙', '💙', '💙', '💙', '💙'],
    ]);
  });
});
