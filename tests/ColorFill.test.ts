import { expect } from 'chai';
import { colorFill, completedGrid } from '../src/utils/ColorFill';

describe('ColorFill', () => {
  var grid: Array<Array<string>>;

  beforeEach(() => {
    grid = [
      ['ðŸ’™', 'ðŸ’™', 'ðŸ”¶'],
      ['ðŸ”¶', 'ðŸ”¶', 'ðŸ”¶'],
      ['ðŸ”¶', 'ðŸ”¶', 'ðŸ”¶'],
      ['ðŸ’™', 'ðŸ’™', 'ðŸ’™'],
    ];
  });

  it('should return grid with all ðŸ”¶ filled with ðŸ’›', () => {
    const result = colorFill(grid, { x: 2, y: 2 }, 'ðŸ’›');
    expect(result).to.deep.equal([
      ['ðŸ’™', 'ðŸ’™', 'ðŸ’›'],
      ['ðŸ’›', 'ðŸ’›', 'ðŸ’›'],
      ['ðŸ’›', 'ðŸ’›', 'ðŸ’›'],
      ['ðŸ’™', 'ðŸ’™', 'ðŸ’™'],
    ]);
  });

  it('should return grid with all ðŸ’™ filled with ðŸ’›', () => {
    const result = colorFill(grid, { x: 0, y: 1 }, 'ðŸ’›');
    expect(result).to.deep.equal([
      ['ðŸ’›', 'ðŸ’›', 'ðŸ”¶'],
      ['ðŸ”¶', 'ðŸ”¶', 'ðŸ”¶'],
      ['ðŸ”¶', 'ðŸ”¶', 'ðŸ”¶'],
      ['ðŸ’›', 'ðŸ’›', 'ðŸ’›'],
    ]);
  });
});

describe('Completed Grid', () => {
  var grid: Array<Array<string>>;

  beforeEach(() => {
    grid = [
      ['ðŸ’™', 'ðŸ’™', 'ðŸ”¶'],
      ['ðŸ”¶', 'ðŸ”¶', 'ðŸ”¶'],
      ['ðŸ”¶', 'ðŸ”¶', 'ðŸ”¶'],
      ['ðŸ’™', 'ðŸ’™', 'ðŸ’™'],
    ];
  });

  it('should return true', () => {
    grid = colorFill(grid, { x: 2, y: 2 }, 'ðŸ’›');
    grid = colorFill(grid, { x: 0, y: 0 }, 'ðŸ’›');
    const result = completedGrid(grid);
    expect(result).to.be.true;
  });

  it('should return false', () => {
    const result = completedGrid(grid);
    expect(result).to.be.false;
  });
});
